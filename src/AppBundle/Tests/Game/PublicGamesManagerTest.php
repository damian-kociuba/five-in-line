<?php

namespace AppBundle\Game;

use AppBundle\ConfigContainer;
use AppBundle\Game\GamesRepository;
use AppBundle\Game\GameBuilder\PrivateGameBuilder;
use AppBundle\Game\GameBuilder\PublicGameBuilder;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-15 at 11:28:51.
 */
class PublicGamesManagerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var PublicGamesManager
     */
    protected $object;
    
    private $publicJoinableGame;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $gameRepository = new GamesRepository();
        $config = new ConfigContainer(array(
            'boardWidth' => 10,
            'boardHeight' => 10)
        );
        $gameBuilder = new GameBuilderSupervisor($config);
        $creator = new Player();
        $opponent = new Player();
        $gameBuilder->setCreator($creator);
        
        $privateGame = $gameBuilder->createGame(new PrivateGameBuilder());
        $publicFullGame = $gameBuilder->createGame(new PublicGameBuilder());
        $publicFullGame->addPlayer($opponent);
        $this->publicJoinableGame = $gameBuilder->createGame(new PublicGameBuilder);

        $gameRepository->attach($privateGame);
        $gameRepository->attach($publicFullGame);
        $gameRepository->attach($this->publicJoinableGame);
        
        $this->object = new PublicGamesManager($gameRepository);
    }

    /**
     * @covers AppBundle\Game\PublicGamesManager::getJoinableGame
     */
    public function testGetJoinableGame() {
        $result = $this->object->getFirstJoinableGame();
        $this->assertSame($this->publicJoinableGame, $result);
    }

}
